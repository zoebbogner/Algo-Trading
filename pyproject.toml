[project]
name = "crypto-algo-trading"
version = "0.1.0"
description = "Professional-grade algorithmic trading system for cryptocurrency markets"
authors = [
    {name = "Your Name",email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.11,<3.13"
dependencies = [
    "pandas>=2.3.2,<3.0.0",
    "numpy>=2.3.2,<3.0.0",
    "pyarrow>=21.0.0,<22.0.0",
    "fastparquet>=2024.11.0,<2025.0.0",
    "aiohttp>=3.12.15,<4.0.0",
    "pyyaml>=6.0.2,<7.0.0",
    "pytz>=2025.2,<2026.0",
    "pytest>=8.4.1,<9.0.0",
    "pytest-asyncio>=1.1.0,<2.0.0",
    "black>=25.1.0,<26.0.0",
    "ruff>=0.12.10,<0.13.0",
    "matplotlib>=3.10.5,<4.0.0",
    "seaborn>=0.13.2,<0.14.0",
    "jupyter>=1.1.1,<2.0.0",
    "psutil>=7.0.0,<8.0.0",
    "python-dotenv>=1.1.1,<2.0.0"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "crypto-algo-trading"
version = "0.1.0"
description = "Professional-grade algorithmic trading system for cryptocurrency markets"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
pandas = ">=2.3.2,<3.0.0"
numpy = ">=2.3.2,<3.0.0"
pyarrow = ">=21.0.0,<22.0.0"
fastparquet = ">=2024.11.0,<2025.0.0"
aiohttp = ">=3.12.15,<4.0.0"
pyyaml = ">=6.0.2,<7.0.0"
pytz = ">=2025.2,<2026.0"
psutil = ">=7.0.0,<8.0.0"
python-dotenv = ">=1.1.1,<2.0.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=8.4.1,<9.0.0"
pytest-asyncio = ">=1.1.0,<2.0.0"
black = ">=25.1.0,<26.0.0"
ruff = ">=0.12.10,<0.13.0"
matplotlib = ">=3.10.5,<4.0.0"
seaborn = ">=0.13.2,<0.14.0"
jupyter = ">=1.1.1,<2.0.0"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
