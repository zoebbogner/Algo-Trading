[tool.poetry]
name = "algo-trading"
version = "0.1.0"
description = "Fast crypto trading bot with LLM-powered decision making"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
pyyaml = "^6.0.1"
pandas = "^2.1.0"
numpy = "^1.24.0"
requests = "^2.31.0"
websockets = "^12.0"
asyncio-mqtt = "^0.16.0"
python-dotenv = "^1.0.0"
structlog = "^23.2.0"
rich = "^13.7.0"
click = "^8.1.7"
schedule = "^1.2.0"
pytz = "^2023.3"
ccxt = "^4.1.0"
ta = "^0.10.2"
scikit-learn = "^1.3.0"
plotly = "^5.17.0"
scipy = "^1.11.0"
joblib = "^1.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^23.12.0"
ruff = "^0.1.6"
isort = "^5.13.0"
mypy = "^1.7.0"
pre-commit = "^3.6.0"
bandit = "^1.7.5"
detect-secrets = "^1.4.0"

# LLM dependencies - uncomment when ready to use
# [tool.poetry.group.llm.dependencies]
# llama-cpp-python = "^0.2.0"
# sentence-transformers = "^2.2.2"
# transformers = "^4.36.0"
# torch = "^2.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "F", "I", "N", "W", "B", "C4", "UP", "ARG", "SIM", "TCH", "Q", "RSE", "RET", "SLF", "SLOT", "TID", "TCH", "ARG", "PIE", "LOG", "PTH", "RUF"]
ignore = ["E501", "B008", "C901"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["B011", "S101"]

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src --cov-report=term-missing --cov-report=html"
asyncio_mode = "auto"
