# Environment Configuration for Algo-Trading System
# Copy this file to .env and fill in your values

# =============================================================================
# SYSTEM MODE
# =============================================================================
# Choose one: SIM, PAPER, LIVE
# SIM = Simulation mode (default, safest)
# PAPER = Paper trading with real market data
# LIVE = Live trading (use with extreme caution)
MODE=SIM

# =============================================================================
# DATA COLLECTION
# =============================================================================
# Binance API credentials (optional for historical data)
BINANCE_API_KEY=
BINANCE_SECRET_KEY=

# Data collection parameters
DATA_COLLECTION_INTERVAL=60  # seconds
MAX_HISTORICAL_DAYS=30
SYMBOLS=BTCUSDT,ETHUSDT,ADAUSDT,BNBUSDT,SOLUSDT

# =============================================================================
# FEATURE ENGINEERING
# =============================================================================
# Feature computation parameters
FEATURE_UPDATE_INTERVAL=300  # seconds
FEATURE_CACHE_TTL=3600      # seconds
MAX_FEATURE_COLUMNS=100

# =============================================================================
# BACKTESTING
# =============================================================================
# Backtesting parameters
BACKTEST_INITIAL_CAPITAL=100000
BACKTEST_COMMISSION_RATE=0.001
BACKTEST_SLIPPAGE_BPS=5
BACKTEST_MAX_POSITION_SIZE=0.05
BACKTEST_MAX_PORTFOLIO_RISK=0.2

# =============================================================================
# LLM CONFIGURATION
# =============================================================================
# Choose LLM backend: local_llama, openai_like, together, bedrock
LLM_BACKEND=local_llama

# Local Llama GGUF Configuration
# Absolute path to your GGUF model file
LLM_INSTRUCT_MODEL_PATH=/Users/zoe/Library/Application Support/nomic.ai/GPT4All/Meta-Llama-3-8B-Instruct.Q4_0.gguf

# LLM Generation Parameters (optional overrides)
LLM_TEMPERATURE=0.2
LLM_MAX_TOKENS=512
LLM_TIMEOUT_S=30

# OpenAI-like API Configuration (if using remote API)
OPENAI_API_KEY=
OPENAI_BASE_URL=https://api.openai.com/v1

# Together.ai Configuration (alternative remote API)
TOGETHER_API_KEY=

# AWS Bedrock Configuration (if using AWS)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================
# Logging configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=logs/algo_trading.log

# Performance monitoring
ENABLE_METRICS=true
METRICS_PORT=8125
ENABLE_PROFILING=false

# =============================================================================
# SECURITY AND COMPLIANCE
# =============================================================================
# API rate limiting
MAX_REQUESTS_PER_MINUTE=60
MAX_REQUESTS_PER_HOUR=1000

# Risk management
MAX_DAILY_LOSS=0.05      # 5% maximum daily loss
MAX_DRAWDOWN=0.20        # 20% maximum drawdown
EMERGENCY_STOP_ENABLED=true

# =============================================================================
# DEVELOPMENT AND TESTING
# =============================================================================
# Development settings
DEBUG=false
ENABLE_MOCK_DATA=false
TEST_MODE=false

# Testing configuration
PYTEST_ADDOPTS="--tb=short --strict-markers"
TEST_COVERAGE_THRESHOLD=80

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================
# Database configuration (if using external DB)
DATABASE_URL=

# Redis configuration (if using Redis for caching)
REDIS_URL=redis://localhost:6379

# Webhook endpoints (for notifications)
WEBHOOK_URL=
WEBHOOK_SECRET=

# =============================================================================
# NOTIFICATIONS
# =============================================================================
# Email notifications
SMTP_HOST=
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
NOTIFICATION_EMAIL=

# Slack notifications
SLACK_WEBHOOK_URL=
SLACK_CHANNEL=#trading-alerts

# Telegram notifications
TELEGRAM_BOT_TOKEN=
TELEGRAM_CHAT_ID=
